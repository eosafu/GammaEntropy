require(MASS)
require(survival)
require(coda)

setwd("C:/Users/Paulo Ricardo/OneDrive/Artigos Publicados/20 - inverse nakagami-m distribution/Programas")


data=read.csv("data.csv", sep=";")

#table(data$PROBLEMA)

#subset(subset(data,data$PROBLEMA=="Ar Condicionado"),VEICULO=="A")$y[-1]
ta<-subset(subset(data,data$PROBLEMA=="SuspensÃ£o"))$y[-1]
  t1<-sort(ta)
  ax<-length(ta)-4
  t<-t1[1:ax]
  x<-t
  n<-length(t)
  delta<-c(rep(1,n))
  #Ajustando K-M
  ekm<-survfit(Surv(t,delta)~1)
  time<-ekm$time
  st<-ekm$surv



est<-fitdistr(x,"gamma")



#MLE
mlealpha<-coef(fitdistr(x,"gamma"))[1]
mlebeta<-coef(fitdistr(x,"gamma"))[2]


ks.test(x,"pgamma",mlealpha,mlebeta)

emvW<-mlealpha
emvH<-mlealpha-log(mlebeta)+lgamma(mlealpha)+(1-mlealpha)*digamma(mlealpha)


R<-51000         #Numero de iteracoes
burnin<-1000
jump<-5
b<-1.3#Valor Auxiliar MCMC
se<-0.2
set.seed(2020)
#######Tibshirani ########
posterior1W4 <- function (W) {
p<-lgamma(n*W)-n*lgamma(W) +log(W*trigamma(W)-1)-0.5*log(W)+(W)*sum(log(t))-(n*W)*log(sum(t))
return(p) }   

posterior2W4 <- function (H,W) {
delta<-exp(W+lgamma(W)+(1-W)*digamma(W)-H)
p<-n*W*log(delta)-delta*sum(t)
return(p) }  

n<-length(x)
t<-x
vH<-length(R+1)
vW<-length(R+1)
vH[1]<-emvH
vW[1]<-emvW
c1<-rep(0,times=R)    #Contador de valores aceitos
c2<-rep(0,times=R)    #Contador de valores aceitos
ccaux<-0
## Realizando o M-H hibrido
a1<-0; i<-1; c10<-0
try(
while (i<=R) {
if(i<1) i<-2
prop1<-rgamma(1,shape=b*vW[i],rate=b)
ratio1<-posterior1W4(prop1)-posterior1W4(vW[i])+dgamma(vW[i],shape=b*prop1,rate=b,log=TRUE)-dgamma(prop1,shape=b*vW[i],rate=b,log=TRUE)
has<-min(1,exp(ratio1)); u1<-runif(1)
if (is.finite(has)) {
if (u1<has) {vW[i+1]<-prop1 ; c1[i]<-0} else {vW[i+1]<-vW[i] ; c1[i]<-1}
  } else {vW[i+1]<-vW[i] ; a1<-a1+1; c1[i]<-1}
prop2<- rnorm(1,vH[i],se)
ratio2<-posterior2W4(prop2,vW[i+1])-posterior2W4(vH[i],vW[i+1]) +dnorm(vH[i], mean=prop2, sd=se, log = TRUE)-dnorm(prop2, mean=vH[i], sd=se, log = TRUE)
has<-min(1,exp(ratio2)); u2<-runif(1)
if (u2<has & is.double(has)) {vH[i+1]<-prop2 ; c2[i]<-0 ; a1<-0 } else {vH[i+1]<-vH[i] ; a1<-a1+1; c2[i]<-1}
if(a1==40) {i<-i-50; a1=0}
i<-i+1 ; c10<-c10+1
}
)
try(vvW<-vW[seq(burnin,R,jump)])
try(vvH<- vH[seq(burnin,R,jump)])

    old  =  options(digits=5)
    ace1<- (1-sum(c1)/length(c1))
    ge1<-abs(geweke.diag(vvW)$z[1])
    ge2<-abs(geweke.diag(vvH)$z[1])
    prai4<-quantile(vvW, probs = 0.025, na.rm = FALSE,names = FALSE,type = 7)
    pras4<-quantile(vvW, probs = 0.975, na.rm = FALSE,names = FALSE,type = 7)
    prli4<-quantile(vvH, probs = 0.025, na.rm = FALSE,names = FALSE,type = 7)
    prls4<-quantile(vvH, probs = 0.975, na.rm = FALSE,names = FALSE,type = 7)
    auxW4<-mean(vvW); auxH4<-mean(vvH); 

par(mfrow=c(1,2))
par(mai=c(0.77,0.77,0.05, 0.07))
ts.plot(vvH,ylab="H",xlab="Sample",col="dodgerblue4")
par(mai=c(0.77,0.77,0.05, 0.07))                                                        
acf(vvH,main="")

c(auxH4,prli4,prls4)